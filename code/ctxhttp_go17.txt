// Here's the version from Go 1.7 just for fun // HL
func Do(ctx context.Context, client *http.Client, req *http.Request) (*http.Response, error) {
        if client == nil {
                client = http.DefaultClient
        }
        resp, err := client.Do(req.WithContext(ctx)) // HL
        // If we got an error, and the context has been canceled, the context's error is probably more useful.
        if err != nil {
                select {
                case <-ctx.Done():
                        err = ctx.Err()
                default:
                }
        }
        return resp, err
}